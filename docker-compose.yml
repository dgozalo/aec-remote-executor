version: "3.9"
services:
  api:
    build:
      dockerfile: Dockerfile.server
    restart: unless-stopped
    environment:
      - TEMPORALITE_HOST_PORT=temporalite:7233
      - POSTGRES_DB_CONNECT_STRING=postgres://postgres:postgres@db:5432/aec_executor_dev?sslmode=disable
    depends_on:
    - worker
    - db
    - temporalite
    - migrate
    ports:
      - "8080:8080"

  frontend:
    build:
      dockerfile: Dockerfile.frontend
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "3000:3000"

  db:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/migrations
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=aec_executor_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate:latest
    profiles: ["tools"]
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=aec_executor_dev
    volumes:
      - ./db/migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://postgres:postgres@db:5432/aec_executor_dev?sslmode=disable",
        "-verbose"
      ]
    command: ["up"]
    depends_on:
      db:
        condition: service_healthy

  worker:
    build:
      dockerfile: Dockerfile.worker
    restart: unless-stopped
    environment:
      - TEMPORALITE_HOST_PORT=temporalite:7233
      - POSTGRES_DB_CONNECT_STRING=postgres://postgres:postgres@db:5432/aec_executor_dev?sslmode=disable
    depends_on:
      - temporalite
      - db

  temporalite:
    build: "https://github.com/temporalio/temporalite.git"
    ports:
      - "8233:8233"
      - "7233:7233"
volumes:
  postgres_data:




